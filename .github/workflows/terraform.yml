name: Terraform CI/CD

on:
  push:
    branches:
      - main19marchbkp
  pull_request:
    branches:
      - main19marchbkp

permissions:
  contents: read

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
     
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Debug Environment Variables
        run: |
            if [ -z "${{ secrets.ARM_CLIENT_ID }}" ]; then echo "ARM_CLIENT_ID is not set"; else echo "ARM_CLIENT_ID is set"; fi
            if [ -z "${{ secrets.ARM_CLIENT_SECRET }}" ]; then echo "ARM_CLIENT_SECRET is not set"; else echo "ARM_CLIENT_SECRET is set"; fi
            if [ -z "${{ secrets.ARM_SUBSCRIPTION_ID }}" ]; then echo "ARM_SUBSCRIPTION_ID is not set"; else echo "ARM_SUBSCRIPTION_ID is set"; fi
            if [ -z "${{ secrets.ARM_TENANT_ID }}" ]; then echo "ARM_TENANT_ID is not set"; else echo "ARM_TENANT_ID is set"; fi

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main18marchbkp' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan